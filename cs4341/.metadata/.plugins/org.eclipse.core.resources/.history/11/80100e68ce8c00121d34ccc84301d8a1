package project0;

import java.util.List;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.PaintEvent;
import org.eclipse.swt.events.PaintListener;
import org.eclipse.swt.graphics.Rectangle;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;

public class MainGUI {

	/**
	 * Launch the application.
	 * @param args
	 */
	public static void main(String[] args) {
		
		Cell[] row4 = {new Cell(true,true,false,true,0,0,"rock",new Point(4,0)),
				new Cell(false, false, false, true, 0, 0, null, new Point(4,1)),
				new Cell(false, false, false, true, 0, 0, null, new Point(4,2)),
				new Cell(false, false, false, true, 0, 0, null, new Point(4,3)),
				new Cell(false, false, false, true, 0, 0, null, new Point(4,4))};

		Cell[] row3 = {new Cell(false,false,false,true,0,0,null,new Point(3,0)),
				new Cell(true, true, false, true, 0, 0, "rock", new Point(3,1)),
				new Cell(false,false,false,true,4,10,null, new Point(3,2)),
				new Cell(false,false,false,true,2,10,null, new Point(3,3)),
				new Cell(false, false, false, true, 0, 0, null, new Point(3,4))};

		Cell[] row2 = {new Cell(false, false, false, true, 0, 0, null, new Point(2,0)),
				new Cell(false, false, false, true, 4, 10, null, new Point(2,1)),
				new Cell(false, false, false, true, 6, 10, null, new Point(2,2)),
				new Cell(false, false, false, true, 4, 10, null, new Point(2,3)),
				new Cell(false, false, false, true, 0, 0, null, new Point(2,4))};

		Cell[] row1 = {new Cell(false, false, false, true, 0, 0, null, new Point(1,0)),
				new Cell(false, false, false, true, 2, 10, null, new Point(1,1)),
				new Cell(false, false, false, true, 4, 10, null, new Point(1,2)),
				new Cell(true,  true,  false, true, 0, 0,"rock",new Point(1,3)),
				new Cell(false, false, false, true, 0, 0, null, new Point(1,4))};

		Cell[] row0 = {new Cell(false, false, false, true, 0, 0, null,new Point(0,0)),
				new Cell(false, false, false, true, 0, 0, null, new Point(0,1)),
				new Cell(false, false, false, true, 0, 0, null, new Point(0,2)),
				new Cell(false, false, false, true, 0, 0, null, new Point(0,3)),
				new Cell(true,true,false,true,0,0,"rock", new Point(0,4))};

		Cell[][] grid = {row0, row1, row2, row3, row4};
		
		Land land = new Land(5,5);
		
		land.populateLand(grid);
		
		//pick your srteategy
		//SearchStrategy search = new DepthFirstSearch();
		SearchStrategy search = new BreadthFirstSearch();
		
		final List<Cell> list = land.search(new Point(0,0), new Point(4,4),search);
		
		final Display display = Display.getDefault();
		final Shell shell = new Shell(display);
		
		shell.addPaintListener(new PaintListener(){ 
	        public void paintControl(PaintEvent e){ 
	            Rectangle clientArea = shell.getClientArea(); 
	            
	            Point lastPoint = list.get(0).location;
	            
	            for(Cell cell : list)
	            {
	            	e.gc.drawOval((cell.location.x * 100) + 10, (cell.location.y * 100) + 10, 20, 20);
	            	e.gc.setForeground(display.getSystemColor(SWT.COLOR_BLUE)); 
	            	e.gc.drawLine((cell.location.x * 100) + 10,(cell.location.y * 100) + 10,(lastPoint.x * 100) + 10,(lastPoint.y * 100) + 10);
	            	lastPoint = cell.location;
	            }
	        } 
	    });
		shell.setSize(600, 600);
		shell.setText("Graphical Path representation");
		
		

		shell.open();
		shell.layout();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
	}

}
